<<<<<<< HEAD
[{"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\index.js":"1","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reportWebVitals.js":"2","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\App.js":"3","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reducers\\userReducer.js":"4","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js":"5","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js":"6","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Error\\Error.js":"7","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreatFreshersJob.js":"8","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js":"9","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js":"10","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\login.js":"11","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\navbar\\navbar.js":"12","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignup.js":"13","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\register.js":"14","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js":"15","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\about-us\\about-us.js":"16","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\footer\\footer.js":"17","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\home\\home.js":"18","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignin.js":"19","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\AllInternships.js":"20","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\AllJobs.js":"21","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\AllFresherJob.js":"22","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\checkValidation.js":"23","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\InternshipUpdate.js":"24","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\JobUpdate.js":"25","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\FresherJobUpdate.js":"26","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Profile.js":"27","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Skills.js":"28","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Label.js":"29","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Input.js":"30","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Achievments.js":"31","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Project.js":"32","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Experience.js":"33","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Education.js":"34","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Volunteer.js":"35","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Other.js":"36","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Start.js":"37"},{"size":517,"mtime":1617712689619,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1617712043731,"results":"40","hashOfConfig":"39"},{"size":6869,"mtime":1618503616142,"results":"41","hashOfConfig":"39"},{"size":212,"mtime":1618028176556,"results":"42","hashOfConfig":"39"},{"size":2196,"mtime":1617712043729,"results":"43","hashOfConfig":"39"},{"size":1754,"mtime":1617712043725,"results":"44","hashOfConfig":"39"},{"size":375,"mtime":1618503616086,"results":"45","hashOfConfig":"39"},{"size":10555,"mtime":1618039069289,"results":"46","hashOfConfig":"39"},{"size":11633,"mtime":1618038679891,"results":"47","hashOfConfig":"39"},{"size":11479,"mtime":1618038670691,"results":"48","hashOfConfig":"39"},{"size":8399,"mtime":1618294654225,"results":"49","hashOfConfig":"39"},{"size":7097,"mtime":1618146226182,"results":"50","hashOfConfig":"39"},{"size":14263,"mtime":1618146226175,"results":"51","hashOfConfig":"39"},{"size":17613,"mtime":1618294778068,"results":"52","hashOfConfig":"39"},{"size":6937,"mtime":1618146226170,"results":"53","hashOfConfig":"39"},{"size":4007,"mtime":1618146226167,"results":"54","hashOfConfig":"39"},{"size":7074,"mtime":1618503616096,"results":"55","hashOfConfig":"39"},{"size":10293,"mtime":1618146226180,"results":"56","hashOfConfig":"39"},{"size":8508,"mtime":1618147493821,"results":"57","hashOfConfig":"39"},{"size":7976,"mtime":1618503616090,"results":"58","hashOfConfig":"39"},{"size":8095,"mtime":1618503616093,"results":"59","hashOfConfig":"39"},{"size":7162,"mtime":1618503616089,"results":"60","hashOfConfig":"39"},{"size":1874,"mtime":1618503616116,"results":"61","hashOfConfig":"39"},{"size":14667,"mtime":1618164602228,"results":"62","hashOfConfig":"39"},{"size":11758,"mtime":1618502845158,"results":"63","hashOfConfig":"39"},{"size":10886,"mtime":1618503132814,"results":"64","hashOfConfig":"39"},{"size":1272,"mtime":1618503616106,"results":"65","hashOfConfig":"39"},{"size":2063,"mtime":1618503616109,"results":"66","hashOfConfig":"39"},{"size":205,"mtime":1618503616103,"results":"67","hashOfConfig":"39"},{"size":182,"mtime":1618503616102,"results":"68","hashOfConfig":"39"},{"size":2093,"mtime":1618503616098,"results":"69","hashOfConfig":"39"},{"size":3849,"mtime":1618503616107,"results":"70","hashOfConfig":"39"},{"size":4243,"mtime":1618503616101,"results":"71","hashOfConfig":"39"},{"size":4543,"mtime":1618503616099,"results":"72","hashOfConfig":"39"},{"size":2107,"mtime":1618503616111,"results":"73","hashOfConfig":"39"},{"size":2055,"mtime":1618503616104,"results":"74","hashOfConfig":"39"},{"size":3422,"mtime":1618503616110,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1gbhm1z",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\index.js",[],["156","157"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reportWebVitals.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\App.js",["158"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\reducers\\userReducer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Error\\Error.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreatFreshersJob.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\login.js",["159"],"import React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Form, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport \"./register.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction LoginForm() {\r\n  const { dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  //creating a dicitionary for every field of the form\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid ,setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/student/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          localStorage.setItem(\"type\", JSON.stringify(\"student\"));\r\n          dispatch({ type: \"USER\", payload: { user: res.data.user , userType: \"student\"} });\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          // alert(\"Signin Successfull\");\r\n          const notify = () => toast(\"Signin Successfull\");\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    // to handle visibility of passsword\r\n\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n        <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Signin\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignin(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#ffc107\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group\r\n                style={{\r\n                  textAlign: \"left\",\r\n                  fontSize: \"1.5vh\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Link to=\"/student-signup\">\r\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                    Don't have an account? Sign up\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default LoginForm;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\navbar\\navbar.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignup.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student\\register.js",["160"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Card, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport \"./register.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst StudentSignup = () => {\r\n  const history = useHistory();\r\n  //creating a dicitionary for every field of the form\r\n  const initialState = {\r\n    personName: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    passwordConfirmation: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n        checkPassword: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n    contact: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        Length: 10,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    degree: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    institutionName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    branch: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    year: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [signupError, setSignupError] = useState(null);\r\n\r\n  const [formIsValid ,setFormIsValid] = useState(false); //boolean to check that the whole form is valid or not\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const passwordIsValidChecker = () => {\r\n    const { password, passwordConfirmation } = formValues;\r\n    return password.value === passwordConfirmation.value;\r\n  };\r\n\r\n  const submitSignup = (e) => {\r\n    const {\r\n      personName,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      contact,\r\n      branch,\r\n      year,\r\n      degree,\r\n      institutionName,\r\n    } = formValues;\r\n\r\n    e.preventDefault();\r\n    if (!passwordIsValidChecker()) {\r\n      setSignupError(\"Passwords do not match\");\r\n      return;\r\n    } else {\r\n      axios\r\n        .post(\"http://localhost:5000/student/signup\", {\r\n          personName: personName.value,\r\n          email: email.value,\r\n          password: password.value,\r\n          contact: contact.value,\r\n          passwordConfirmation: passwordConfirmation.value,\r\n          branch: branch.value,\r\n          year: year.value,\r\n          degree: degree.value,\r\n          institutionName: institutionName.value,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data.user);\r\n          // alert(res.data.message);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          if(res.data.user){\r\n            history.pushState(\"/student-login\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    setFormValues(initialState);\r\n  };\r\n  const togglePasswordVisiblity = () => { // to handle visibility of passsword \r\n    \r\n      setFormValues({...formValues, showPassword: !(formValues.showPassword)});\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#6EE2CD\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Signup\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignup(e)}>\r\n              {/* Name of the student */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.personName.valid &&\r\n                    formValues.personName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"personName\"\r\n                  value={formValues.personName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.personName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.personName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Email address */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/*  Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.password.valid && formValues.password.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type={formValues.showPassword?\"text\":\"password\"}\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  value={formValues.password.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.password.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.password.errorMessage}\r\n                  </span>\r\n                )}\r\n                <InputGroup.Append>\r\n                      <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                        <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                        >\r\n                          {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton> \r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              {/* Confirm Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Confirm Password\r\n                </Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.passwordConfirmation.valid &&\r\n                      formValues.passwordConfirmation.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"Re-enter Password\"\r\n                    name=\"passwordConfirmation\"\r\n                    value={formValues.passwordConfirmation.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.passwordConfirmation.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.passwordConfirmation.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                      <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton> \r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              {/* Contact Number */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.contact.valid && formValues.contact.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter your contact number\"\r\n                  name=\"contact\"\r\n                  value={formValues.contact.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.contact.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.contact.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Degree */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which degree you are pursuing?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.degree.valid && formValues.degree.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter complete name of your degree\"\r\n                  name=\"degree\"\r\n                  value={formValues.degree.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.degree.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.degree.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* College Name */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicName\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  College Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.institutionName.valid &&\r\n                    formValues.institutionName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Your college name\"\r\n                  name=\"institutionName\"\r\n                  value={formValues.institutionName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.institutionName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.institutionName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Branch of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Field of study\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.branch.valid && formValues.branch.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your field of study\"\r\n                  name=\"branch\"\r\n                  value={formValues.branch.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.branch.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.branch.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Year of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which year of college you are in?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.year.valid && formValues.year.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your college year\"\r\n                  name=\"year\"\r\n                  value={formValues.year.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.year.errorMessage && (\r\n                  <span className=\"error\">{formValues.year.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Already a user? */}\r\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\r\n                <Link to=\"/student-login\">\r\n                  <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                    Already have an account? Sign in\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              {signupError ? (\r\n                <Form.Text\r\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\r\n                  className=\"text-danger\"\r\n                >\r\n                  {signupError}\r\n                </Form.Text>\r\n              ) : null}\r\n              <Button\r\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default StudentSignup;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\about-us\\about-us.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\footer\\footer.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\home\\home.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\employer\\employerSignin.js",["161"],"import React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Form,  InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport \"./employer.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction EmployerSignin() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/employer/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          // toast(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          localStorage.setItem(\"type\", JSON.stringify(\"employee\"))\r\n          dispatch({ type: \"USER\", payload: {user: res.data.user , userType: \"employee\"} });\r\n          console.log(state);\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          // alert(\"Signin Successfull\");\r\n          // toast(\"Signin Successfull\");\r\n          const notify = () => toast('Signin Successfull');\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    // to handle visibility of passsword\r\n\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"employer_form_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Employer Signin\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignin(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#ffc107\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <Form.Group\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontSize: \"1.5vh\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/employer-signup\">\r\n                    <a href=\"/#\" style={{ fontWeight: \"bold\" }}>\r\n                      Don't have an account? Sign up\r\n                    </a>\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form.Group>\r\n              <Button\r\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployerSignin;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Internships\\AllInternships.js",["162","163","164","165","166","167","168","169"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\Jobs\\AllJobs.js",["170","171","172"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\FreshersJob\\AllFresherJob.js",["173","174"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\utils\\checkValidation.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\InternshipUpdate.js",["175","176"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst UpdateInternship = () => {\r\n  const history = useHistory();\r\n  const postId = useParams().id;\r\n  const [internship, setInternship] = useState();\r\n\r\n  const initialState = {\r\n    description: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stipend: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    startDate: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    endDate: {\r\n      value: null,\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  // const setInitialValue = () => {\r\n  // const updatedFormElementD = { ...updatedFormValues[\"description\"] };\r\n  // const updatedFormElementL = { ...updatedFormValues[\"location\"] };\r\n  // const updatedFormElementS = { ...updatedFormValues[\"stipend\"] };\r\n  // const updatedFormElementTS = { ...updatedFormValues[\"techstack\"] };\r\n  // const updatedFormElementLD = { ...updatedFormValues[\"lastDate\"] };\r\n  // const updatedFormElementSD = { ...updatedFormValues[\"startDate\"] };\r\n  // const updatedFormElementED = { ...updatedFormValues[\"endDate\"] };\r\n  // updatedFormElementD.value =nullnternship.description;\r\n  // updatedFormElementL.value = internship.location;\r\n  // updatedFormElementS.value = internship.stipend;\r\n  // updatedFormElementTS.value = internship.techstack;\r\n  // updatedFormElementLD.value = internship.lastDate;\r\n  // updatedFormElementSD.value = internship.startDate;\r\n  // updatedFormElementED.value = internship.endDate;\r\n  // updatedFormValues[\"description\"] = updatedFormElementD;\r\n  // updatedFormValues[\"location\"] = updatedFormElementL;\r\n  // updatedFormValues[\"stipend\"] = updatedFormElementS;\r\n  // updatedFormValues[\"techstack\"] = updatedFormElementTS;\r\n  // updatedFormValues[\"lastDate\"] = updatedFormElementLD;\r\n  // updatedFormValues[\"startDate\"] = updatedFormElementSD;\r\n  // updatedFormValues[\"endDate\"] = updatedFormElementED;\r\n  // };\r\n  // useEffect(() => {\r\n  //   if (internship) {\r\n  //     setInitialState((prev) => {\r\n  //       return {\r\n  //         ...prev,\r\n  //         description: {\r\n  //           ...prev.description,\r\n  //           value: internship.description,\r\n  //         },\r\n  //         location: {\r\n  //           ...prev.location,\r\n  //           value: internship.location,\r\n  //         },\r\n  //         stipend: {\r\n  //           ...prev.stipend,\r\n  //           value: internship.stipend,\r\n  //         },\r\n  //       };\r\n  //     });\r\n\r\n  //     setFormValues(initialState);\r\n  //   }\r\n  // }, [internship]);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/employer/get-internship/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.internship);\r\n          setInternship(res.data.internship);\r\n          console.log(internship);\r\n          // if (internship) {\r\n          // console.log(res.data.internship.description);\r\n          // setInitialValue();\r\n          // setInitialValue(\"description\", res.data.internship.description);\r\n          // setInitialValue(\"location\", res.data.internship.location);\r\n          // setInitialValue(\"stipend\", res.data.internship.stipend);\r\n          // setInitialValue(\"lastDate\", new Date(res.data.internship.lastDate));\r\n          // setInitialValue(\"startDate\", new Date(res.data.internship.startDate));\r\n          // setInitialValue(\"endDate\", res.data.internship.endDate);\r\n          // setInitialValue(\"techstack\", res.data.internship.techstack);\r\n          // }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitInternship = (e) => {\r\n    e.preventDefault();\r\n    console.log(typeof formValues.startDate.value);\r\n    const duration =\r\n      new Date(formValues.endDate.value) - new Date(formValues.startDate.value);\r\n    console.log(duration);\r\n\r\n    const {\r\n      description,\r\n      location,\r\n      stipend,\r\n      techstack,\r\n      lastDate,\r\n      startDate,\r\n      endDate,\r\n    } = formValues;\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"http://localhost:5000/employer/update-internship\",\r\n      data: {\r\n        postId,\r\n        description: description.value,\r\n        location: location.value,\r\n        stipend: stipend.value,\r\n        techstack: techstack.value,\r\n        lastDate: lastDate.value,\r\n        startDate: startDate.value,\r\n        endDate: endDate.value,\r\n        duration: duration,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInitialValue(description, )\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n      {internship && (\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Update Internship\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitInternship(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Company Name\"\r\n                  name=\"location\"\r\n                  value={formValues.location.value || internship.location}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.location.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.location.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Internship Description\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter description\"\r\n                  name=\"description\"\r\n                  value={formValues.description.value || internship.description}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.description.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.description.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Stipend</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter stipend\"\r\n                  name=\"stipend\"\r\n                  value={formValues.stipend.value|| internship.stipend}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.stipend.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.stipend.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  TechStack\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter techstack\"\r\n                  name=\"techstack\"\r\n                  value={formValues.techstack.value || internship.techstack}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.techstack.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.techstack.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Last Date\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"date\"\r\n                  placeholder=\"Enter last date\"\r\n                  name=\"lastDate\"\r\n                  value={formValues.lastDate.value || new Date(internship.lastDate)}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.lastDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.lastDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Start Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter start date\"\r\n                  name=\"startDate\"\r\n                  value={formValues.startDate.value || new Date(internship.startDate)}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.startDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.startDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  End Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter end date\"\r\n                  name=\"endDate\"\r\n                  value={formValues.endDate.value || new Date(internship.endDate)}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.endDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.endDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {\r\n                <Button\r\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                  variant=\"secondary\"\r\n                  type=\"submit\"\r\n                  // disabled={!formIsValid}\r\n                >\r\n                  Update\r\n                </Button>\r\n              }\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateInternship;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\JobUpdate.js",["177","178"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst UpdateJob = () => {\r\n  const history = useHistory();\r\n  const postId = useParams().id;\r\n  const [job, setJob] = useState();\r\n\r\n  const initialState = {\r\n    description: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    salary: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    startDate: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    experience: {\r\n      value: null,\r\n      //   validation: {\r\n      //     required: true,\r\n      //   },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/employer/get-job/${postId}`,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          console.log(res.data.job);\r\n          setJob(res.data.job);\r\n          console.log(job);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitInternship = (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      description,\r\n      location,\r\n      salary,\r\n      techstack,\r\n      lastDate,\r\n      startDate,\r\n      experience,\r\n    } = formValues;\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"http://localhost:5000/employer/update-job\",\r\n      data: {\r\n        postId,\r\n        description: description.value,\r\n        location: location.value,\r\n        salary: salary.value,\r\n        techstack: techstack.value,\r\n        lastDate: lastDate.value,\r\n        startDate: startDate.value,\r\n        experience: experience.value,\r\n      },\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          // setInitialValue(description, )\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n      {job && (\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Update Job\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitInternship(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Location</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Company Name\"\r\n                  name=\"location\"\r\n                  value={formValues.location.value || job.location}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.location.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.location.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Internship Description\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter description\"\r\n                  name=\"description\"\r\n                  value={formValues.description.value || job.description}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.description.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.description.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>salary</Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter salary\"\r\n                  name=\"salary\"\r\n                  value={formValues.salary.value || job.salary}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.salary.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.salary.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  TechStack\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter techstack\"\r\n                  name=\"techstack\"\r\n                  value={formValues.techstack.value || job.techstack}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.techstack.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.techstack.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Last Date\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"date\"\r\n                  placeholder=\"Enter last date\"\r\n                  name=\"lastDate\"\r\n                  value={formValues.lastDate.value || job.lastDate}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.lastDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.lastDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Start Month\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"month\"\r\n                  placeholder=\"Enter start date\"\r\n                  name=\"startDate\"\r\n                  value={formValues.startDate.value || job.startDate}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.startDate.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.startDate.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Experience\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  type=\"Number\"\r\n                  placeholder=\"Enter experince\"\r\n                  name=\"experience\"\r\n                  value={formValues.experience.value || job.experience}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.experience.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.experience.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {\r\n                <Button\r\n                  style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                  variant=\"secondary\"\r\n                  type=\"submit\"\r\n                  // disabled={!formIsValid}\r\n                >\r\n                  Update\r\n                </Button>\r\n              }\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateJob;\r\n","D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\UpdateForm\\FresherJobUpdate.js",["179","180"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Profile.js",["181","182","183","184","185","186","187","188"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Skills.js",["189","190","191","192"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Label.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Input.js",[],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Achievments.js",["193","194","195","196"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Project.js",["197","198","199"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Experience.js",["200","201","202"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Education.js",["203","204","205","206"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Volunteer.js",["207","208","209","210"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Other.js",["211","212","213","214"],"D:\\WebD\\easyJobIntern\\easy-job-intern\\src\\components\\student-profile\\Start.js",["215","216","217","218","219"],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":91,"column":3,"nodeType":"226","messageId":"227","endLine":208,"endColumn":17},{"ruleId":"228","severity":1,"message":"229","line":49,"column":10,"nodeType":"230","messageId":"231","endLine":49,"endColumn":21},{"ruleId":"228","severity":1,"message":"229","line":114,"column":10,"nodeType":"230","messageId":"231","endLine":114,"endColumn":21},{"ruleId":"228","severity":1,"message":"229","line":48,"column":10,"nodeType":"230","messageId":"231","endLine":48,"endColumn":21},{"ruleId":"228","severity":1,"message":"232","line":3,"column":10,"nodeType":"230","messageId":"231","endLine":3,"endColumn":14},{"ruleId":"228","severity":1,"message":"233","line":3,"column":16,"nodeType":"230","messageId":"231","endLine":3,"endColumn":25},{"ruleId":"228","severity":1,"message":"234","line":5,"column":3,"nodeType":"230","messageId":"231","endLine":5,"endColumn":9},{"ruleId":"228","severity":1,"message":"235","line":9,"column":3,"nodeType":"230","messageId":"231","endLine":9,"endColumn":17},{"ruleId":"228","severity":1,"message":"236","line":12,"column":3,"nodeType":"230","messageId":"231","endLine":12,"endColumn":8},{"ruleId":"228","severity":1,"message":"237","line":21,"column":10,"nodeType":"230","messageId":"231","endLine":21,"endColumn":16},{"ruleId":"228","severity":1,"message":"238","line":24,"column":18,"nodeType":"230","messageId":"231","endLine":24,"endColumn":26},{"ruleId":"239","severity":1,"message":"240","line":162,"column":40,"nodeType":"241","messageId":"242","endLine":162,"endColumn":42},{"ruleId":"228","severity":1,"message":"232","line":13,"column":10,"nodeType":"230","messageId":"231","endLine":13,"endColumn":14},{"ruleId":"228","severity":1,"message":"238","line":19,"column":18,"nodeType":"230","messageId":"231","endLine":19,"endColumn":26},{"ruleId":"239","severity":1,"message":"240","line":177,"column":40,"nodeType":"241","messageId":"242","endLine":177,"endColumn":42},{"ruleId":"228","severity":1,"message":"238","line":20,"column":18,"nodeType":"230","messageId":"231","endLine":20,"endColumn":26},{"ruleId":"239","severity":1,"message":"240","line":147,"column":40,"nodeType":"241","messageId":"242","endLine":147,"endColumn":42},{"ruleId":"228","severity":1,"message":"229","line":80,"column":10,"nodeType":"230","messageId":"231","endLine":80,"endColumn":21},{"ruleId":"243","severity":1,"message":"244","line":164,"column":6,"nodeType":"245","endLine":164,"endColumn":8,"suggestions":"246"},{"ruleId":"228","severity":1,"message":"229","line":80,"column":10,"nodeType":"230","messageId":"231","endLine":80,"endColumn":21},{"ruleId":"243","severity":1,"message":"247","line":106,"column":6,"nodeType":"245","endLine":106,"endColumn":8,"suggestions":"248"},{"ruleId":"228","severity":1,"message":"229","line":80,"column":10,"nodeType":"230","messageId":"231","endLine":80,"endColumn":21},{"ruleId":"243","severity":1,"message":"247","line":106,"column":6,"nodeType":"245","endLine":106,"endColumn":8,"suggestions":"249"},{"ruleId":"228","severity":1,"message":"250","line":3,"column":11,"nodeType":"230","messageId":"231","endLine":3,"endColumn":19},{"ruleId":"228","severity":1,"message":"234","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"251","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":12},{"ruleId":"228","severity":1,"message":"252","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":18},{"ruleId":"228","severity":1,"message":"253","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":18},{"ruleId":"228","severity":1,"message":"254","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":15},{"ruleId":"228","severity":1,"message":"255","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":13},{"ruleId":"228","severity":1,"message":"256","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":13},{"ruleId":"228","severity":1,"message":"234","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"251","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":12},{"ruleId":"228","severity":1,"message":"256","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":13},{"ruleId":"228","severity":1,"message":"257","line":20,"column":13,"nodeType":"230","messageId":"231","endLine":20,"endColumn":25},{"ruleId":"228","severity":1,"message":"234","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"251","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":12},{"ruleId":"228","severity":1,"message":"256","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":13},{"ruleId":"228","severity":1,"message":"257","line":20,"column":13,"nodeType":"230","messageId":"231","endLine":20,"endColumn":25},{"ruleId":"228","severity":1,"message":"258","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":17},{"ruleId":"228","severity":1,"message":"234","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"251","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":12},{"ruleId":"228","severity":1,"message":"258","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":17},{"ruleId":"228","severity":1,"message":"234","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"251","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":12},{"ruleId":"228","severity":1,"message":"259","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":17},{"ruleId":"228","severity":1,"message":"258","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":17},{"ruleId":"228","severity":1,"message":"234","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"251","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":12},{"ruleId":"228","severity":1,"message":"234","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"251","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":12},{"ruleId":"228","severity":1,"message":"256","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":13},{"ruleId":"228","severity":1,"message":"257","line":20,"column":13,"nodeType":"230","messageId":"231","endLine":20,"endColumn":25},{"ruleId":"228","severity":1,"message":"234","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"251","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":12},{"ruleId":"228","severity":1,"message":"256","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":13},{"ruleId":"228","severity":1,"message":"257","line":20,"column":13,"nodeType":"230","messageId":"231","endLine":20,"endColumn":25},{"ruleId":"228","severity":1,"message":"234","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"251","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":12},{"ruleId":"228","severity":1,"message":"255","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":13},{"ruleId":"228","severity":1,"message":"260","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":14},{"ruleId":"228","severity":1,"message":"256","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":13},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-unused-vars","'formIsValid' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useParams' is defined but never used.","'Button' is defined but never used.","'DropdownButton' is defined but never used.","'Modal' is defined but never used.","'colors' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'internship' and 'postId'. Either include them or remove the dependency array.","ArrayExpression",["263"],"React Hook useEffect has missing dependencies: 'job' and 'postId'. Either include them or remove the dependency array.",["264"],["265"],"'useState' is defined but never used.","'Icon' is defined but never used.","'IconButton' is defined but never used.","'RemoveIcon' is defined but never used.","'AddIcon' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'handleSubmit' is assigned a value but never used.","'TextField' is defined but never used.","'Container' is defined but never used.","'Skills' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"268","fix":"270"},"Update the dependencies array to be: [internship, postId]",{"range":"271","text":"272"},"Update the dependencies array to be: [job, postId]",{"range":"273","text":"274"},{"range":"275","text":"274"},[5176,5178],"[internship, postId]",[2570,2572],"[job, postId]",[2585,2587]]
=======

 work
[{"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\index.js":"1","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\reportWebVitals.js":"2","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\App.js":"3","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js":"4","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\reducers\\userReducer.js":"5","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\home\\home.js":"6","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\navbar\\navbar.js":"7","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student\\login.js":"8","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\footer\\footer.js":"9","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\about-us\\about-us.js":"10","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\employer\\employerSignin.js":"11","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\employer\\employerSignup.js":"12","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js":"13","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student\\register.js":"14","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js":"15","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\Error\\Error.js":"16","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js":"17","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js":"18","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\utils\\checkValidation.js":"19","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Profile.js":"20","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Input.jsx":"21","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Label.jsx":"22","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Skills.jsx":"23","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Achievments.jsx":"24","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Other.jsx":"25","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Experience.jsx":"26","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Project.jsx":"27","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Volunteer.jsx":"28","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Education.jsx":"29","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Start.jsx":"30"},{"size":517,"mtime":1615270625564,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1615270625565,"results":"33","hashOfConfig":"32"},{"size":2943,"mtime":1618473934196,"results":"34","hashOfConfig":"32"},{"size":2196,"mtime":1617813025139,"results":"35","hashOfConfig":"32"},{"size":174,"mtime":1617813114660,"results":"36","hashOfConfig":"32"},{"size":10271,"mtime":1617813114651,"results":"37","hashOfConfig":"32"},{"size":6704,"mtime":1617813114653,"results":"38","hashOfConfig":"32"},{"size":8304,"mtime":1617813114656,"results":"39","hashOfConfig":"32"},{"size":7014,"mtime":1617813114649,"results":"40","hashOfConfig":"32"},{"size":3937,"mtime":1617813114638,"results":"41","hashOfConfig":"32"},{"size":8385,"mtime":1617813114646,"results":"42","hashOfConfig":"32"},{"size":14276,"mtime":1617813114647,"results":"43","hashOfConfig":"32"},{"size":6913,"mtime":1617813114642,"results":"44","hashOfConfig":"32"},{"size":17603,"mtime":1617813114658,"results":"45","hashOfConfig":"32"},{"size":1754,"mtime":1617813114655,"results":"46","hashOfConfig":"32"},{"size":374,"mtime":1617813114636,"results":"47","hashOfConfig":"32"},{"size":9089,"mtime":1617813114631,"results":"48","hashOfConfig":"32"},{"size":8133,"mtime":1617813114632,"results":"49","hashOfConfig":"32"},{"size":1863,"mtime":1617813114661,"results":"50","hashOfConfig":"32"},{"size":1272,"mtime":1618473934209,"results":"51","hashOfConfig":"32"},{"size":182,"mtime":1618473934204,"results":"52","hashOfConfig":"32"},{"size":205,"mtime":1618473934205,"results":"53","hashOfConfig":"32"},{"size":2063,"mtime":1618473934212,"results":"54","hashOfConfig":"32"},{"size":2093,"mtime":1618473934199,"results":"55","hashOfConfig":"32"},{"size":2055,"mtime":1618473934207,"results":"56","hashOfConfig":"32"},{"size":4243,"mtime":1618473934202,"results":"57","hashOfConfig":"32"},{"size":3849,"mtime":1618473934210,"results":"58","hashOfConfig":"32"},{"size":2107,"mtime":1618473934215,"results":"59","hashOfConfig":"32"},{"size":4543,"mtime":1618473934200,"results":"60","hashOfConfig":"32"},{"size":3422,"mtime":1618473934214,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1xujwye",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\index.js",[],["134","135"],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\reportWebVitals.js",[],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\App.js",["136","137","138"],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\terms-condition\\terms-condition.js",[],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\reducers\\userReducer.js",[],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\home\\home.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"import React, { useContext } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card, Container, Row, Col, Button, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./home.css\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst Home = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  console.log(state);\r\n\r\n  return (\r\n    <>\r\n      <div class=\"home\">\r\n\r\n        <div\r\n          style={{ backgroundColor: \"\" }}\r\n          \r\n          class=\"col d-flex justify-content-center\"\r\n        >\r\n          {!state && <Card\r\n            style={{\r\n              width: \"75vh\",\r\n              marginTop: \"6%\",\r\n              opacity: \"0.8\",\r\n              background: \"black\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <Card.Body>\r\n              <Card.Text>\r\n                <h2>Easy Job Intern</h2>\r\n                FIND BEST WINTER & SUMMER INTERNSHIPS FOR STUDENTS IN INDIA<br></br>\r\n                Apply to 10,000+ internships for free!\r\n              </Card.Text>\r\n              <Button style={{color: '#000000',backgroundColor: '#ffc107',borderColor: 'white'}} variant=\"info\" as={Link} to=\"/student-signup\" >\r\n                Get Started \r\n              </Button>\r\n            </Card.Body>\r\n          </Card>}\r\n        </div>\r\n        <div style={{ background: \"\", padding: \"30px 0 80px 0\" }}>\r\n        \r\n          <Container>\r\n          \r\n            <Row>\r\n              <Col className=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\r\n                <img src=\"images/industry.png\" alt=\"\"></img>\r\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\r\n                  Internship By Industry\r\n                </h4>\r\n                <ListGroup>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item variant=\"primary\">IT</ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"secondary\">\r\n                      Marketing\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Design\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"danger\">\r\n                      MBA\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"warning\">\r\n                      Engineering\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"info\">\r\n                      Media\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Teaching\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"dark\">\r\n                      Finance\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col className=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\r\n                <img src=\"images/location.png\" alt=\"\"></img>\r\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\r\n                  {\" \"}\r\n                  Internship By Location\r\n                </h4>\r\n                <ListGroup>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item variant=\"primary\">Mumbai</ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"secondary\">\r\n                      Pune\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Bangalore\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"danger\">\r\n                      Chennai\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"warning\">\r\n                      Kolkata\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"info\">\r\n                      Gugaon\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Delhi\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"dark\">\r\n                      India\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col className=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\r\n                <img src=\"images/stream.png\" alt=\"\"></img>\r\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\r\n                  Internship By Stream\r\n                </h4>\r\n                <ListGroup>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item variant=\"primary\">\r\n                      Management\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"secondary\">\r\n                      Manufacturing\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Accounts\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"danger\">\r\n                      Architecture\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"warning\">\r\n                      Machine Learning\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"info\">\r\n                      Data Science\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Development\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"dark\">\r\n                      Design\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                </ListGroup>\r\n              </Col>\r\n              <Col className=\"col-lg-3 col-md-6 col-sm-12\" id=\"offer-range\">\r\n                <img src=\"images/ot2.png\" alt=\"\"></img>\r\n                <h4 style={{ marginTop: 15, marginBottom: 15 }}>\r\n                  Online Trainings by Us\r\n                </h4>\r\n                <ListGroup>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item variant=\"primary\">\r\n                      Programming With Python\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"secondary\">\r\n                      Digital Marketing\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      Web Development\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"danger\">\r\n                      Machine Learning\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"warning\">\r\n                      Advanced Excel\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"info\">\r\n                      Ethical Hacking\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    <ListGroup.Item action variant=\"success\">\r\n                      AutoCAD\r\n                    </ListGroup.Item>\r\n                  </a>\r\n                  <a className=\"itemLink\" href=\"#\">\r\n                    {\" \"}\r\n                    <ListGroup.Item action variant=\"dark\">\r\n                      Creative Writing\r\n                    </ListGroup.Item>{\" \"}\r\n                  </a>\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\navbar\\navbar.js",["172","173","174"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nfunction NavBar() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  console.log(state);\r\n  //   useEffect(() => {\r\n  //     const user = isAuth();\r\n  //   }, []);\r\n\r\n  //   const isAuth = () => {\r\n  //     if (process.browser) {\r\n  //       const checktoken = localStorage.getItem(\"jwt\");\r\n  //       if (checktoken) {\r\n  //         if (localStorage.getItem(\"user\")) {\r\n  //           const user = localStorage.getItem(\"user\");\r\n  //           return JSON.parse(user);\r\n  //         } else {\r\n  //           return false;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Navbar.Brand as={Link} to=\"/\" style={{ color: \"yellow\" }}>\r\n          Easy Job Intern\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  Internship\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item as={Link} to=\"/\">\r\n                    {\" \"}\r\n                    Internship By Industry\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item as={Link} to=\"/\">\r\n                    {\" \"}\r\n                    Internship By Location\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item as={Link} to=\"/\">\r\n                    {\" \"}\r\n                    Internship By Stream\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  Jobs\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item as={Link} to=\"/\">\r\n                    Jobs By Industry\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item as={Link} to=\"/\">\r\n                    Jobs By Location\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item as={Link} to=\"/\">\r\n                    Jobs By Stream\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  Freshers Jobs\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item as={Link} to=\"/\">\r\n                    Freshers Jobs By Industry\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item as={Link} to=\"/\">\r\n                    Freshers Jobs By Location\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item as={Link} to=\"/\">\r\n                    Freshers Jobs By Stream\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/\"\r\n              className=\"my-auto px-3\"\r\n              style={{ color: \"white\" }}\r\n            >\r\n              Blogs\r\n            </Nav.Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-1\" />\r\n            <Button>\r\n              <Icon.Search />\r\n            </Button>\r\n          </Form>\r\n          <Nav className=\"ml-auto\">\r\n            {state ? (\r\n              <React.Fragment>\r\n                <Nav.Link className=\"my-auto\" style={{ color: \"#fff\" }}>\r\n                  Welcome {state.personName}\r\n                </Nav.Link>\r\n                <Nav.Link className=\"my-auto\">\r\n                  <Dropdown>\r\n                    <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                      Create\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item as={Link} to=\"/create-internship\">\r\n                        Internship\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item as={Link} to=\"/create-job\">\r\n                        Job\r\n                      </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  className=\"my-auto\"\r\n                  style={{ color: \"#fff\" }}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"jwt\");\r\n                    localStorage.removeItem(\"user\");\r\n                    window.location.reload(false);\r\n                  }}\r\n                >\r\n                  signout\r\n                </Nav.Link>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                <Nav.Link>\r\n                  <Dropdown>\r\n                    <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                      <Icon.BoxArrowInRight /> Login\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item as={Link} to=\"/student-login\">\r\n                        Student\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item as={Link} to=\"/employer-login\">\r\n                        Employer\r\n                      </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                  <Dropdown>\r\n                    <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                      <Icon.PersonPlus /> Signup\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item as={Link} to=\"/student-signup\">\r\n                        Student\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item as={Link} to=\"/employer-signup\">\r\n                        Employer\r\n                      </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </Nav.Link>\r\n              </React.Fragment>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student\\login.js",["175","176","177","178"],"import React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Form, Alert, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport \"./register.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction LoginForm() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  //creating a dicitionary for every field of the form\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/student/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          dispatch({ type: \"USER\", payload: res.data.user });\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          // alert(\"Signin Successfull\");\r\n          const notify = () => toast(\"Signin Successfull\");\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    // to handle visibility of passsword\r\n\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n        <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Signin\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignin(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#ffc107\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group\r\n                style={{\r\n                  textAlign: \"left\",\r\n                  fontSize: \"1.5vh\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              >\r\n                <Link to=\"/student-signup\">\r\n                  <a style={{ fontWeight: \"bold\" }}>\r\n                    Don't have an account? Sign up\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              <Button\r\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default LoginForm;\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\footer\\footer.js",["179","180","181","182"],"import Button from \"react-bootstrap/Button\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer() { \r\n  return (\r\n    <>\r\n        <footer className=\" bg-dark text-white newFooter\" style={{padding: \"0px\", margin:\"0px\", backgroundColor:\"#1A2226\"}}> \r\n       {/* <div className=\"container\" style={{padding: \"0px\", margin:\"0px\", width:'100%'}}>*/}  {/*</div> */}\r\n        <div className=\"row\" style={{padding: \"0px\", width:'100%', marginLeft:'0px'}}>\r\n               \r\n              {/* Column 1 */}\r\n        <div className=\"col-md-3 col-sm-6\" style={{paddingRight: \"1%\", margin:\"0px\"}}>\r\n          <h5 style={{paddingTop:'2%'}}>Online Trainings</h5>\r\n          <ul className=\"list-unstyled\" style={{borderBottom: '2px dotted #6c6c6c'}}>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Advanced Excel\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Data Science and ML\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Core Java\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Digital Marketing\r\n                  </Button>{\" \"}</li>\r\n          </ul>\r\n        </div>\r\n\r\n              {/* Column 2 */}\r\n        <div className=\"col-md-3 col-sm-6\" style={{paddingRight: \"1%\", margin:\"0px\"}}>\r\n          <h5 style={{paddingTop:'2%'}}>Internship by Places</h5>\r\n          <ul className=\"list-unstyled\" style={{borderBottom: '2px dotted #6c6c6c'}}>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                   Mumbai\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Delhi\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Bangalore\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    PAN India\r\n                  </Button>{\" \"}</li>\r\n          </ul>\r\n        </div>\r\n\r\n             {/* Column 3 */}\r\n          <div className=\"col-md-3 col-sm-6\" style={{paddingRight: \"1%\", margin:\"0px\"}}>\r\n          <h5 style={{paddingTop:'2%'}}>Internship by Stream</h5>\r\n          <ul className=\"list-unstyled\" style={{borderBottom: '2px dotted #6c6c6c'}}>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                   Computer Science\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Content Marketing\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Summer Research Fellowship\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  href=\"#\" >\r\n                    Electical Engineering\r\n                  </Button>{\" \"}</li>\r\n          </ul>\r\n        </div>\r\n\r\n              {/* Column 4 */}\r\n          <div className=\"col-md-3 col-sm-6\" style={{paddingRight: \"1%\", margin:\"0px\"}}>\r\n          <h5 style={{paddingTop:'2%'}}>About Easy Job Intern</h5>\r\n          <ul className=\"list-unstyled\" style={{borderBottom: '2px dotted #6c6c6c'}}>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  as={Link} to=\"/about-us\" >\r\n                   About Us\r\n                </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  as={Link} to=\"/contact-us\" >\r\n                  Contact Us\r\n                  </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  as={Link} to=\"/terms-conditions\" >\r\n                  Terms and Condition\r\n              </Button>{\" \"}</li>\r\n            <li><Button style={{ marginBottom: \"5px\", borderColor: \"#343a40\", padding: \"2px 0.75rem\", fontSize: \"0.8rem\"}}  variant=\"outline-warning\"  as={Link} to=\"/privacy-policy\" >\r\n                  Privacy Policy\r\n                </Button>{\" \"}</li>\r\n          </ul>\r\n        </div>\r\n\r\n          {/* Footer Bottom */}\r\n          <div className=\"row  mx-auto\">\r\n            <div className=\"col-sm-12 mt-md-2  my-2\">\r\n              <p style={{ fontSize: \"15px\", marginBottom: \"5px\" }}>\r\n                Connect With Us!\r\n              </p>\r\n              <a href=\"#\">\r\n                <Icon.Linkedin\r\n                  style={{ color: \"#ffc107\" }}\r\n                  className=\"mx-md-3 mx-2\"\r\n                ></Icon.Linkedin>{\" \"}\r\n              </a>\r\n              <a href=\"#\">\r\n                <Icon.Facebook\r\n                  style={{ color: \"#ffc107\" }}\r\n                  className=\"mx-md-3 mx-2\"\r\n                ></Icon.Facebook>\r\n              </a>\r\n              <a href=\"#\">\r\n                <Icon.Twitter\r\n                  style={{ color: \"#ffc107\" }}\r\n                  className=\"mx-md-3 mx-2\"\r\n                ></Icon.Twitter>\r\n              </a>\r\n              <a href=\"#\">\r\n                <Icon.Youtube\r\n                  style={{ color: \"#ffc107\" }}\r\n                  className=\"mx-md-3 mx-2\"\r\n                ></Icon.Youtube>{\" \"}\r\n              </a>\r\n              <br />\r\n              <span style={{ fontSize: \"8px\" }}>\r\n                &copy; 2021 - All right reserved - Easy Job Intern\r\n              </span>\r\n            </div>\r\n            </div>\r\n         </div>\r\n        \r\n        </footer> \r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\about-us\\about-us.js",["183","184","185","186"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card, Container, Row } from \"react-bootstrap\";\r\nimport \"./about-us.css\";\r\n\r\nexport default function AboutUs() {\r\n  return (\r\n    <>\r\n      <div class=\"aboutus\">\r\n        <h2 class=\"about-heading\">About Us</h2>\r\n\r\n        <div class=\"col d-flex justify-content-center\">\r\n          <Card\r\n            style={{\r\n              width: \"80%\",\r\n              marginTop: \"2%\",\r\n              opacity: \"0.8\",\r\n              background: \"#30363d\",\r\n              color: \"white\",\r\n              paddingTop: \"1.2rem\",\r\n              paddingBottom: \"1.2rem\",\r\n              border: \"2px solid white\",\r\n              boxShadow: \"0 0 20px 2px rgba(0, 0, 0, 0.5)\",\r\n            }}\r\n          >\r\n            <Card.Body>\r\n              <Row>\r\n                <div class=\"col-lg-6 col-md-12 col-sm-12\">\r\n                  <img src=\"images/32.-Discussion.png\" class=\"about-img\"></img>\r\n                </div>\r\n                <div\r\n                  class=\"col-lg-6 col-md-12 col-sm-12  about-part\"\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    placeContent: \"center\",\r\n                  }}\r\n                >\r\n                  Our main motive behind this project to provide the best jobs\r\n                  and internship opportunities. Companies can post here open\r\n                  application for job and internship so students can make own\r\n                  profile and apply in multiple companies. We want to make this\r\n                  website for the purpose of connecting students to companies .\r\n                  You can explore the job and internship opportunities according\r\n                  to your convience. We also have online trainings session for\r\n                  you. We connect you and your requirements on the same page.\r\n                  You can fill your application for your internship or your jobs\r\n                  on the same place and get the response .\r\n                </div>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n        <h2 class=\"about-heading1\">What we offer ?</h2>\r\n\r\n        <div style={{ padding: \"0% 10% 0% 10%\" }}>\r\n          <Container fluid>\r\n            <Row>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12\" id=\"offer-range1\">\r\n                <img src=\"images/INTERN SHIP.png\"></img>\r\n\r\n                <h4>Internships</h4>\r\n                <p>\r\n                  Are you looking for students internship? Find the best winter\r\n                  & summer internships for college students in Engineering, MBA,\r\n                  IT, Media, Finance & other streams.\r\n                </p>\r\n\r\n                <button class=\"btn-v\">visit it</button>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12\" id=\"offer-range2\">\r\n                <img src=\"images/INTERN SHIP (1).png\"></img>\r\n                <h4>Fresher's Jobs</h4>\r\n\r\n                <p>\r\n                  Are you a Fresher ? Go and explore it and start your journey\r\n                  according to your requirements ,your choices .We all have for\r\n                  you.\r\n                </p>\r\n                <button class=\"btn-v\">visit it</button>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-12 col-sm-12\" id=\"offer-range3\">\r\n                <img src=\"images/JOB - Logo - Google Chrome 27-03-2021 19_58_07 (2).png\"></img>\r\n                <h4>Jobs</h4>\r\n                <p class=\"para\">\r\n                  Are you looking for jobs ? Then it is the right place .Choose\r\n                  your job according to your experience , your interest.Make the\r\n                  wise choice .\r\n                </p>\r\n                <button class=\"btn-v\">visit it</button>\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\employer\\employerSignin.js",["187","188","189","190","191"],"import React, { Component, useContext, useState } from \"react\";\r\nimport { Button, Card, Form, Alert, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport axios from \"axios\";\r\nimport \"./employer.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { UserContext } from \"../../App\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nfunction EmployerSignin() {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const initialState = {\r\n    email: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n  };\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitSignin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formValues;\r\n    axios\r\n      .post(\"http://localhost:5000/employer/signin\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.error) {\r\n          console.log(res.data.error);\r\n          // alert(res.data.error);\r\n          // toast(res.data.error);\r\n          const notify = () => toast(res.data.error);\r\n          notify();\r\n        } else {\r\n          localStorage.setItem(\"jwt\", res.data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n          dispatch({ type: \"USER\", payload: res.data.user });\r\n          console.log(\r\n            \"Token: \",\r\n            res.data.token,\r\n            \"User Details: \",\r\n            res.data.user\r\n          );\r\n          // alert(\"Signin Successfull\");\r\n          // toast(\"Signin Successfull\");\r\n          const notify = () => toast('Signin Successfull');\r\n          notify();\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n    setFormValues(initialState);\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    // to handle visibility of passsword\r\n\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n          }}\r\n          className=\"employer_form_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#ffc107\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Employer Signin\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignin(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#ffc107\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n\r\n                <Form.Group\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontSize: \"1.5vh\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <Link to=\"/employer-signup\">\r\n                    <a style={{ fontWeight: \"bold\" }}>\r\n                      Don't have an account? Sign up\r\n                    </a>\r\n                  </Link>\r\n                </Form.Group>\r\n              </Form.Group>\r\n              <Button\r\n                style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Signin\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployerSignin;\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\employer\\employerSignup.js",["192","193","194"],"import React, { Component, useState } from \"react\";\r\nimport { Button, Card, Form, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport \"./employer.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst EmployerSignup = () => {\r\n  const history = useHistory();\r\n  //listing initial states of the fields present in the form\r\n  const initialState = {\r\n    companyName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 3,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    passwordConfirmation: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n        checkPassword: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n\r\n    contact: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        Length: 10,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    personName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [signupError, setSignupError] = useState(null);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const passwordIsValidChecker = () => {\r\n    const { password, passwordConfirmation } = formValues;\r\n    return password.value === passwordConfirmation.value;\r\n  };\r\n\r\n  const submitSignup = (e) => {\r\n    const {\r\n      companyName,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      personName,\r\n      contact,\r\n    } = formValues;\r\n\r\n    e.preventDefault();\r\n    if (!passwordIsValidChecker()) {\r\n      setSignupError(\"Passwords do not match\");\r\n      return;\r\n    } else {\r\n      axios\r\n        .post(\"http://localhost:5000/employer/signup\", {\r\n          personName: personName.value,\r\n          email: email.value,\r\n          password: password.value,\r\n          contact: contact.value,\r\n          passwordConfirmation: passwordConfirmation.value,\r\n          companyName: companyName.value,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data.user);\r\n          // alert(res.data.message);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          if(res.data.user){\r\n            history.push(\"/employer-login\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    setFormValues(initialState);\r\n  };\r\n  const togglePasswordVisiblity = () => {\r\n    setFormValues({ ...formValues, showPassword: !formValues.showPassword });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n        <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n          }}\r\n          className=\"employer_form_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#6EE2CD\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Employer Signup\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignup(e)}>\r\n              {/* Name of the company */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Company Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.companyName.valid &&\r\n                    formValues.companyName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter the company name\"\r\n                  name=\"companyName\"\r\n                  value={formValues.companyName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.companyName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.companyName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/*Email  */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.password.valid && formValues.password.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type={formValues.showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={formValues.password.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.password.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.password.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#6EE2CD\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              {/* Password Confirmation */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Confirm Password\r\n                </Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.passwordConfirmation.valid &&\r\n                      formValues.passwordConfirmation.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"Re-enter Password\"\r\n                    name=\"passwordConfirmation\"\r\n                    value={formValues.passwordConfirmation.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.passwordConfirmation.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.passwordConfirmation.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text\r\n                      style={{\r\n                        borderColor: \"#6EE2CD\",\r\n                        color: \"#000000\",\r\n                        height: \"37px\",\r\n                        width: \"28px\",\r\n                        paddingLeft: \"1px\",\r\n                        paddingRight: \"1px\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        style={{ width: \"25px\" }}\r\n                        onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? (\r\n                          <Visibility />\r\n                        ) : (\r\n                          <VisibilityOff />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              {/* Person Name */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.personName.valid &&\r\n                    formValues.personName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"personName\"\r\n                  value={formValues.personName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.personName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.personName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* contact */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.contact.valid && formValues.contact.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter your contact number\"\r\n                  name=\"contact\"\r\n                  value={formValues.contact.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.contact.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.contact.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n              {/* For Existing user */}\r\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\r\n                <Link to=\"/employer-login\">\r\n                  <a style={{ fontWeight: \"bold\" }}>\r\n                    Already have an account? Sign in\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              {signupError ? (\r\n                <Form.Text\r\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\r\n                  className=\"text-danger\"\r\n                >\r\n                  {signupError}\r\n                </Form.Text>\r\n              ) : null}\r\n              <Button\r\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployerSignup;\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\contact-us\\contact-us.js",["195","196","197","198","199"],"import React, { useState} from 'react'\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport './contact-us.css'\r\n\r\nconst ContactUs = () => {\r\n \r\n  \r\n  const [firstName,setfirstName] = useState(\"\");\r\n  const [email,setEmail] = useState(\"\");\r\n  const [mobile,setMobile] = useState();\r\n  const [lastName, setlastName] = useState(\"\");\r\n  const [messages, setmessages] = useState(\"\");\r\n\r\n\r\n  const [firstNameErr,setfirstNameErr] = useState({});\r\n  const [lastNameErr,setlastNameErr] = useState({});\r\n  const [emailErr,setemailErr] = useState({});\r\n  const [mobileErr,setmobileErr] = useState({});\r\n  const [messageErr,setmessagesErr] = useState({});\r\n\r\n  \r\n  const API_KEY = process.env.FORMSPREE_API_KEY\r\n\r\n  const [serverState, setServerState] = useState({\r\n    submitting: false,\r\n    status: null\r\n  })\r\n\r\n\r\n  const handleServerResponse = (ok, msg, form) => {\r\n    setServerState({\r\n      submitting: false,\r\n      status: { ok, msg }\r\n    });\r\n    if (ok) {\r\n      form.reset();\r\n    }\r\n  }\r\n  \r\n  const submitContactUs = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    const isValid = formValidations() ;\r\n\r\n    console.log(firstName);\r\n    if (isValid) {\r\n    const form = e.target;\r\n    setServerState({ submitting: true });\r\n    const url = `https://formspree.io/f/${API_KEY}`\r\n    fetch(url, {\r\n      method: 'POST',\r\n      mode: 'no-cors',\r\n      body: JSON.stringify({\r\n        firstName: firstName ,\r\n        lastName: lastName,\r\n        email: email,\r\n        mobile: mobile,  \r\n        messages: messages\r\n      }),\r\n    })\r\n    .then(r => {\r\n      handleServerResponse(true, \"Thanks for contacting us.\", form);\r\n    })\r\n    .catch(r => {\r\n      handleServerResponse(false, \"Not able to submit!\", form);\r\n    });\r\n    setfirstName(\"\");\r\n    setlastName(\"\");\r\n    setEmail(\"\");\r\n    setMobile(\"\");\r\n    setmessages(\"\");\r\n    }\r\n  }\r\n      \r\n  const formValidations = () => {\r\n\r\n    const firstNameErr = {} ;\r\n    const lastNameErr = {} ;\r\n    const emailErr = {} ;\r\n    const mobileErr = {} ;\r\n    const messageErr = {} ;\r\n\r\n    let isValid = true; \r\n\r\n\r\n    if(!firstName){\r\n      firstNameErr.firstNameEmpty = \"*This field is empty*\";\r\n      isValid = false ;\r\n    }else if(firstName.trim().length < 3){\r\n      firstNameErr.firstNameShort = \"*first name is too short*\";\r\n      isValid = false ;\r\n    }else if(firstName.trim().length >= 10){\r\n      firstNameErr.firstNameLong = \"*first name is too long*\";\r\n      isValid = false ;\r\n    }\r\n\r\n    if(!lastName){\r\n      lastNameErr.lastNameEmpty = \"*This field is empty*\";\r\n      isValid = false ;\r\n    }else if(lastName.trim().length < 3){\r\n      lastNameErr.lastNameShort = \"*last name is too short*\";\r\n      isValid = false ;\r\n    }else if(lastName.trim().length >= 10){\r\n      lastNameErr.lastNameLong = \"*last name is too long*\";\r\n      isValid = false ;\r\n    }\r\n\r\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (!email) {\r\n      emailErr.emailRequired = \"*Email is required*\";\r\n      isValid = false;\r\n    }else if (!emailRegex.test(email)) {\r\n      emailErr.emailValid =\"*Please Enter Valid Email*\";\r\n      isValid = false;\r\n    }\r\n\r\n    const pattern = /^\\d+$/;\r\n\r\n    if (!mobile){\r\n        mobileErr.mobileEmpty= '*This field is empty*';\r\n      isValid = false;\r\n    }else if (!pattern.test(mobile)){\r\n        mobileErr.mobileRequired = \"Required field should be a number\";\r\n        isValid = false;\r\n    }else if (mobile.trim().length < 10 ){\r\n      mobileErr.mobileLenght = \"Required field should be a valid number\";\r\n        isValid = false;\r\n    }\r\n\r\n    if(!messages){\r\n        messageErr.messageEmpty= \"*This field is empty*\";\r\n        isValid = false ;\r\n      }else if(messages.trim().length < 3){\r\n        messageErr.messageShort = \"*message is too short*\";\r\n        isValid = false ;\r\n      }\r\n\r\n\r\n\r\n    setfirstNameErr(firstNameErr);\r\n    setlastNameErr(lastNameErr);\r\n    setemailErr(emailErr);\r\n    setmobileErr(mobileErr);\r\n    setmessagesErr(messageErr);\r\n\r\n    return isValid ;\r\n  }\r\n\r\n  return (\r\n    <div className=\"background\" >\r\n      <div className=\"form\">\r\n        <h3>Contact Us</h3>\r\n        <Form className=\"contactUs\" onSubmit={submitContactUs}>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\" id=\"firstName\" name=\"firstName\"\r\n              placeholder=\"First Name\"\r\n              value={firstName}\r\n              className=\"form-control\"\r\n              onChange={ (e) =>{setfirstName(e.target.value)} }/>\r\n\r\n          {Object.keys(firstNameErr).map((key)=>{\r\n       return <div key={key} style={{color : \"red\"}}>{firstNameErr[key]}</div>\r\n })}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\" id=\"lastName\" name=\"lastName\"\r\n              placeholder=\"Last Name\"\r\n              value={lastName}\r\n              className=\"form-control\"\r\n              onChange={ (e) => {setlastName(e.target.value) } }/>\r\n\r\n          {Object.keys(lastNameErr).map((key)=>{\r\n       return <div key={key} style={{color : \"red\"}}>{lastNameErr[key]}</div>\r\n })}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\" id=\"email\" name=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              className=\"form-control\"\r\n              onChange={ (e) => {setEmail(e.target.value)} }/>\r\n              \r\n         {Object.keys(emailErr).map((key)=>{\r\n       return <div key={key} style={{color : \"red\"}}>{emailErr[key]}</div>\r\n })}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"number\" id=\"mobile\" name=\"mobile\"\r\n              placeholder=\"Enter mobile no.\"\r\n              value={mobile}\r\n              className=\"form-control\"\r\n              onChange={ (e) => {setMobile(e.target.value)} } />\r\n\r\n           {Object.keys(mobileErr).map((key)=>{\r\n       return <div key={key} style={{color : \"red\"}}>{mobileErr[key]}</div>\r\n })}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"textarea\" id=\"messages\" name=\"messages\"\r\n              placeholder=\"Enter message\"\r\n              rows=\"12\"\r\n              value={messages}\r\n              className=\"form-control\"\r\n              onChange={ (e) => {setmessages(e.target.value)} }/>\r\n\r\n           {Object.keys(messageErr).map((key)=>{\r\n       return <div key={key} style={{color : \"red\"}}>{messageErr[key]}</div>\r\n })}\r\n          </Form.Group>\r\n          <Button variant=\"warning\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          {serverState.status && (\r\n            <p className={!serverState.status.ok ? \"errorMsg\" : \"\"}>\r\n              {serverState.status.msg}\r\n            </p>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactUs;\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student\\register.js",["200","201"],"import React, { useState } from \"react\";\r\nimport { Button, Form, Card, InputGroup } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\nimport \"./register.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst StudentSignup = () => {\r\n  const history = useHistory();\r\n  //creating a dicitionary for every field of the form\r\n  const initialState = {\r\n    personName: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n    email: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    passwordConfirmation: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8,\r\n        checkPassword: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    showPassword: false,\r\n    contact: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        Length: 10,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    degree: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    institutionName: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    branch: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    year: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [signupError, setSignupError] = useState(null);\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false); //boolean to check that the whole form is valid or not\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n      updatedFormValues.password.value\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const passwordIsValidChecker = () => {\r\n    const { password, passwordConfirmation } = formValues;\r\n    return password.value === passwordConfirmation.value;\r\n  };\r\n\r\n  const submitSignup = (e) => {\r\n    const {\r\n      personName,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      contact,\r\n      branch,\r\n      year,\r\n      degree,\r\n      institutionName,\r\n    } = formValues;\r\n\r\n    e.preventDefault();\r\n    if (!passwordIsValidChecker()) {\r\n      setSignupError(\"Passwords do not match\");\r\n      return;\r\n    } else {\r\n      axios\r\n        .post(\"http://localhost:5000/student/signup\", {\r\n          personName: personName.value,\r\n          email: email.value,\r\n          password: password.value,\r\n          contact: contact.value,\r\n          passwordConfirmation: passwordConfirmation.value,\r\n          branch: branch.value,\r\n          year: year.value,\r\n          degree: degree.value,\r\n          institutionName: institutionName.value,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data.user);\r\n          // alert(res.data.message);\r\n          const notify = () => toast(res.data.message);\r\n          notify();\r\n          if(res.data.user){\r\n            history.pushState(\"/student-login\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    setFormValues(initialState);\r\n  };\r\n  const togglePasswordVisiblity = () => { // to handle visibility of passsword \r\n    \r\n      setFormValues({...formValues, showPassword: !(formValues.showPassword)});\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"4vh 0\" }}>\r\n      <Toaster />\r\n        <Card\r\n          style={{\r\n            width: \"40vw\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"4vh\",\r\n            marginBottom: \"4vh\",\r\n            backgroundImage: \"linear-gradient(to right, white , #6EE2CD)\",\r\n          }}\r\n          className=\"register_card_custom\"\r\n        >\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"#6EE2CD\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.25rem\",\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Student Signup\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => submitSignup(e)}>\r\n              {/* Name of the student */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Name</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.personName.valid &&\r\n                    formValues.personName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"personName\"\r\n                  value={formValues.personName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.personName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.personName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Email address */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Email address\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.email.valid && formValues.email.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  value={formValues.email.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.email.errorMessage && (\r\n                  <span className=\"error\">{formValues.email.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/*  Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Password</Form.Label>\r\n                <InputGroup>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.password.valid && formValues.password.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type={formValues.showPassword?\"text\":\"password\"}\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  value={formValues.password.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.password.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.password.errorMessage}\r\n                  </span>\r\n                )}\r\n                <InputGroup.Append>\r\n                      <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                        <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                        >\r\n                          {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton> \r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              {/* Confirm Password */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\", marginBottom: \"1.6vh\" }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Confirm Password\r\n                </Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    className={`${\r\n                      !formValues.passwordConfirmation.valid &&\r\n                      formValues.passwordConfirmation.touched\r\n                        ? \"input-error\"\r\n                        : \"\"\r\n                    }`}\r\n                    style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"Re-enter Password\"\r\n                    name=\"passwordConfirmation\"\r\n                    value={formValues.passwordConfirmation.value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {formValues.passwordConfirmation.errorMessage && (\r\n                    <span className=\"error\">\r\n                      {formValues.passwordConfirmation.errorMessage}\r\n                    </span>\r\n                  )}\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text style={{borderColor: \"#ffc107\", color: \"#000000\", height: \"37px\", width: \"28px\", paddingLeft:\"1px\",paddingRight:\"1px\" }}>\r\n                      <IconButton style={{width: \"25px\"}}\r\n                          onClick={togglePasswordVisiblity}\r\n                      >\r\n                        {formValues.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton> \r\n                    </InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              {/* Contact Number */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>Contact</Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.contact.valid && formValues.contact.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter your contact number\"\r\n                  name=\"contact\"\r\n                  value={formValues.contact.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.contact.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.contact.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Degree */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which degree you are pursuing?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.degree.valid && formValues.degree.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter complete name of your degree\"\r\n                  name=\"degree\"\r\n                  value={formValues.degree.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.degree.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.degree.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* College Name */}\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicName\"\r\n              >\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  College Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.institutionName.valid &&\r\n                    formValues.institutionName.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Your college name\"\r\n                  name=\"institutionName\"\r\n                  value={formValues.institutionName.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.institutionName.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.institutionName.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Branch of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Field of study\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.branch.valid && formValues.branch.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your field of study\"\r\n                  name=\"branch\"\r\n                  value={formValues.branch.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.branch.errorMessage && (\r\n                  <span className=\"error\">\r\n                    {formValues.branch.errorMessage}\r\n                  </span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Year of study */}\r\n              <Form.Group style={{ textAlign: \"left\" }}>\r\n                <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                  Which year of college you are in?\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className={`${\r\n                    !formValues.year.valid && formValues.year.touched\r\n                      ? \"input-error\"\r\n                      : \"\"\r\n                  }`}\r\n                  style={{ borderColor: \"#6EE2CD\", color: \"#000000\" }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your college year\"\r\n                  name=\"year\"\r\n                  value={formValues.year.value}\r\n                  onChange={handleChange}\r\n                />\r\n                {formValues.year.errorMessage && (\r\n                  <span className=\"error\">{formValues.year.errorMessage}</span>\r\n                )}\r\n              </Form.Group>\r\n\r\n              {/* Already a user? */}\r\n              <Form.Group style={{ textAlign: \"left\", fontSize: \"1.5vh\" }}>\r\n                <Link to=\"/student-login\">\r\n                  <a style={{ fontWeight: \"bold\" }}>\r\n                    Already have an account? Sign in\r\n                  </a>\r\n                </Link>\r\n              </Form.Group>\r\n\r\n              {signupError ? (\r\n                <Form.Text\r\n                  style={{ paddingBottom: \"0.6vh\", fontWeight: \"bold\" }}\r\n                  className=\"text-danger\"\r\n                >\r\n                  {signupError}\r\n                </Form.Text>\r\n              ) : null}\r\n              <Button\r\n                style={{ color: \"#6EE2CD\", fontWeight: \"bold\" }}\r\n                variant=\"secondary\"\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default StudentSignup;\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\privacy-policy\\privacy-policy.js",[],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\Error\\Error.js",[],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\CreateNew\\CreateInternship.js",["202","203"],"import React, { useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst NewInternship = () => {\r\n  const initialState = {\r\n    companyName: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    stipend: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    duration: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitInternship = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Card\r\n        style={{\r\n          width: \"40vw\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          marginTop: \"4vh\",\r\n          marginBottom: \"4vh\",\r\n          backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n        }}\r\n        className=\"register_card_custom\"\r\n      >\r\n        <Card.Header\r\n          style={{\r\n            backgroundColor: \"#6c6c6c\",\r\n            color: \"#ffc107\",\r\n            fontFamily: '\"Merriweather\", serif',\r\n            fontSize: \"1.25rem\",\r\n          }}\r\n          as=\"h5\"\r\n        >\r\n          New Internship\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={(e) => submitInternship(e)}>\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Company Name\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter Company Name\"\r\n                name=\"companyName\"\r\n                value={formValues.companyName.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.companyName.errorMessage && (\r\n                <span className=\"error\">{formValues.companyName.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Location\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter Company Name\"\r\n                name=\"location\"\r\n                value={formValues.location.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.location.errorMessage && (\r\n                <span className=\"error\">{formValues.location.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Internship Description\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                name=\"description\"\r\n                value={formValues.description.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.description.errorMessage && (\r\n                <span className=\"error\">{formValues.description.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Duration\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter duration\"\r\n                name=\"duration\"\r\n                value={formValues.duration.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.duration.errorMessage && (\r\n                <span className=\"error\">{formValues.duration.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Stipend\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter stipend\"\r\n                name=\"stipend\"\r\n                value={formValues.stipend.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.stipend.errorMessage && (\r\n                <span className=\"error\">{formValues.stipend.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                TechStack\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter techstack\"\r\n                name=\"techstack\"\r\n                value={formValues.techstack.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.techstack.errorMessage && (\r\n                <span className=\"error\">{formValues.techstack.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Last Date \r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"date\"\r\n                placeholder=\"Enter last date\"\r\n                name=\"lastDate\"\r\n                value={formValues.lastDate.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.lastDate.errorMessage && (\r\n                <span className=\"error\">{formValues.lastDate.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            \r\n\r\n            {<Button\r\n              style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n              variant=\"secondary\"\r\n              type=\"submit\"\r\n              disabled={!formIsValid}\r\n            >\r\n              Create\r\n            </Button>}\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewInternship;\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\CreateNew\\CreateJob.js",["204","205"],"import React, { useState } from \"react\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport checkValidity from \"../../utils/checkValidation\";\r\n\r\nconst NewJob = () => {\r\n  const initialState = {\r\n    companyName: {\r\n      //value of the input field\r\n      value: \"\",\r\n      //rules to check while validating the input\r\n      validation: {\r\n        required: true,\r\n      },\r\n      //error messages to show in case any validation rule is not followed\r\n      errorMessage: \"\",\r\n      // boolean value to check if the whole input field is valid or not\r\n      valid: false,\r\n      //boolean value to check if the input field is touched or not\r\n      touched: false,\r\n    },\r\n    description: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    location: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    salary: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    techstack: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    lastDate: {\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      errorMessage: \"\",\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n  };\r\n\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const updatedFormValues = { ...formValues };\r\n    const updatedFormElement = { ...updatedFormValues[e.target.name] };\r\n    updatedFormElement.value = e.target.value;\r\n    let validOutput = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation,\r\n    );\r\n    updatedFormElement.valid = validOutput[0];\r\n    updatedFormElement.errorMessage = validOutput[1];\r\n    updatedFormElement.touched = true;\r\n    updatedFormValues[e.target.name] = updatedFormElement;\r\n\r\n    let formValid = true;\r\n    for (let inputIdentifiers in updatedFormValues) {\r\n      formValid = updatedFormValues[inputIdentifiers].valid && formValid;\r\n    }\r\n    setFormValues(updatedFormValues);\r\n    setFormIsValid(formValid);\r\n  };\r\n\r\n  const submitJob = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"4vh 0\" }}>\r\n      <Card\r\n        style={{\r\n          width: \"40vw\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          marginTop: \"4vh\",\r\n          marginBottom: \"4vh\",\r\n          backgroundImage: \"linear-gradient(to right, white , #ffc107)\",\r\n        }}\r\n        className=\"register_card_custom\"\r\n      >\r\n        <Card.Header\r\n          style={{\r\n            backgroundColor: \"#6c6c6c\",\r\n            color: \"#ffc107\",\r\n            fontFamily: '\"Merriweather\", serif',\r\n            fontSize: \"1.25rem\",\r\n          }}\r\n          as=\"h5\"\r\n        >\r\n          New Job\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={(e) => submitJob(e)}>\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Company Name\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter Company Name\"\r\n                name=\"companyName\"\r\n                value={formValues.companyName.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.companyName.errorMessage && (\r\n                <span className=\"error\">{formValues.companyName.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Location\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter Company Name\"\r\n                name=\"location\"\r\n                value={formValues.location.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.location.errorMessage && (\r\n                <span className=\"error\">{formValues.location.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Job Description\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                name=\"description\"\r\n                value={formValues.description.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.description.errorMessage && (\r\n                <span className=\"error\">{formValues.description.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Salaray\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter stipend\"\r\n                name=\"stipend\"\r\n                value={formValues.salary.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.salary.errorMessage && (\r\n                <span className=\"error\">{formValues.salary.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                TechStack\r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"text\"\r\n                placeholder=\"Enter techstack\"\r\n                name=\"techstack\"\r\n                value={formValues.techstack.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.techstack.errorMessage && (\r\n                <span className=\"error\">{formValues.techstack.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              style={{ textAlign: \"left\" }}\r\n              controlId=\"formBasicEmail\"\r\n            >\r\n              <Form.Label style={{ fontWeight: \"bold\" }}>\r\n                Last Date \r\n              </Form.Label>\r\n              <Form.Control\r\n                style={{ borderColor: \"#ffc107\", color: \"#000000\" }}\r\n                type=\"date\"\r\n                placeholder=\"Enter last date\"\r\n                name=\"lastDate\"\r\n                value={formValues.lastDate.value}\r\n                onChange={handleChange}\r\n              />\r\n              {formValues.lastDate.errorMessage && (\r\n                <span className=\"error\">{formValues.lastDate.errorMessage}</span>\r\n              )}\r\n            </Form.Group>\r\n\r\n            \r\n\r\n            {<Button\r\n              style={{ color: \"#ffc107\", fontWeight: \"bold\" }}\r\n              variant=\"secondary\"\r\n              type=\"submit\"\r\n              disabled={!formIsValid}\r\n            >\r\n              Create\r\n            </Button>}\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewJob;\r\n","C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\utils\\checkValidation.js",[],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Profile.js",["206","207","208","209","210","211","212","213"],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Input.jsx",[],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Label.jsx",[],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Skills.jsx",["214","215","216","217"],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Achievments.jsx",["218","219","220","221"],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Other.jsx",["222","223","224","225"],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Experience.jsx",["226","227","228"],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Project.jsx",["229","230","231"],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Volunteer.jsx",["232","233","234","235"],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Education.jsx",["236","237","238","239"],"C:\\Users\\SHAHRUKH\\OneDrive\\Desktop\\GSSOC\\easy-job-intern\\easy-job-intern\\src\\components\\student-profile\\Start.jsx",["240","241","242","243","244"],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":24,"column":9,"nodeType":"251","messageId":"252","endLine":24,"endColumn":16},{"ruleId":"249","severity":1,"message":"253","line":25,"column":11,"nodeType":"251","messageId":"252","endLine":25,"endColumn":16},{"ruleId":"254","severity":1,"message":"255","line":32,"column":6,"nodeType":"256","endLine":32,"endColumn":8,"suggestions":"257"},{"ruleId":"249","severity":1,"message":"258","line":9,"column":18,"nodeType":"251","messageId":"252","endLine":9,"endColumn":26},{"ruleId":"259","severity":1,"message":"260","line":53,"column":19,"nodeType":"261","endLine":53,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":56,"column":19,"nodeType":"261","endLine":56,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":61,"column":19,"nodeType":"261","endLine":61,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":67,"column":19,"nodeType":"261","endLine":67,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":73,"column":19,"nodeType":"261","endLine":73,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":79,"column":19,"nodeType":"261","endLine":79,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":85,"column":19,"nodeType":"261","endLine":85,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":90,"column":19,"nodeType":"261","endLine":90,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":105,"column":19,"nodeType":"261","endLine":105,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":108,"column":19,"nodeType":"261","endLine":108,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":113,"column":19,"nodeType":"261","endLine":113,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":119,"column":19,"nodeType":"261","endLine":119,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":125,"column":19,"nodeType":"261","endLine":125,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":131,"column":19,"nodeType":"261","endLine":131,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":137,"column":19,"nodeType":"261","endLine":137,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":142,"column":19,"nodeType":"261","endLine":142,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":156,"column":19,"nodeType":"261","endLine":156,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":161,"column":19,"nodeType":"261","endLine":161,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":166,"column":19,"nodeType":"261","endLine":166,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":172,"column":19,"nodeType":"261","endLine":172,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":178,"column":19,"nodeType":"261","endLine":178,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":184,"column":19,"nodeType":"261","endLine":184,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":190,"column":19,"nodeType":"261","endLine":190,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":195,"column":19,"nodeType":"261","endLine":195,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":209,"column":19,"nodeType":"261","endLine":209,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":214,"column":19,"nodeType":"261","endLine":214,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":219,"column":19,"nodeType":"261","endLine":219,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":225,"column":19,"nodeType":"261","endLine":225,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":231,"column":19,"nodeType":"261","endLine":231,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":237,"column":19,"nodeType":"261","endLine":237,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":243,"column":19,"nodeType":"261","endLine":243,"endColumn":52},{"ruleId":"259","severity":1,"message":"260","line":248,"column":19,"nodeType":"261","endLine":248,"endColumn":52},{"ruleId":"249","severity":1,"message":"262","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"249","severity":1,"message":"263","line":1,"column":27,"nodeType":"251","messageId":"252","endLine":1,"endColumn":36},{"ruleId":"249","severity":1,"message":"258","line":16,"column":18,"nodeType":"251","messageId":"252","endLine":16,"endColumn":26},{"ruleId":"249","severity":1,"message":"264","line":2,"column":30,"nodeType":"251","messageId":"252","endLine":2,"endColumn":35},{"ruleId":"249","severity":1,"message":"253","line":14,"column":11,"nodeType":"251","messageId":"252","endLine":14,"endColumn":16},{"ruleId":"249","severity":1,"message":"265","line":49,"column":10,"nodeType":"251","messageId":"252","endLine":49,"endColumn":21},{"ruleId":"259","severity":1,"message":"266","line":225,"column":19,"nodeType":"261","endLine":225,"endColumn":53},{"ruleId":"259","severity":1,"message":"260","line":94,"column":15,"nodeType":"261","endLine":94,"endColumn":27},{"ruleId":"259","severity":1,"message":"260","line":100,"column":15,"nodeType":"261","endLine":100,"endColumn":27},{"ruleId":"259","severity":1,"message":"260","line":106,"column":15,"nodeType":"261","endLine":106,"endColumn":27},{"ruleId":"259","severity":1,"message":"260","line":112,"column":15,"nodeType":"261","endLine":112,"endColumn":27},{"ruleId":"267","severity":1,"message":"268","line":29,"column":19,"nodeType":"261","endLine":29,"endColumn":74},{"ruleId":"267","severity":1,"message":"268","line":60,"column":17,"nodeType":"261","endLine":60,"endColumn":51},{"ruleId":"267","severity":1,"message":"268","line":72,"column":17,"nodeType":"261","endLine":72,"endColumn":55},{"ruleId":"267","severity":1,"message":"268","line":83,"column":17,"nodeType":"261","endLine":83,"endColumn":90},{"ruleId":"249","severity":1,"message":"269","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"264","line":2,"column":30,"nodeType":"251","messageId":"252","endLine":2,"endColumn":35},{"ruleId":"249","severity":1,"message":"253","line":14,"column":11,"nodeType":"251","messageId":"252","endLine":14,"endColumn":16},{"ruleId":"249","severity":1,"message":"265","line":48,"column":10,"nodeType":"251","messageId":"252","endLine":48,"endColumn":21},{"ruleId":"259","severity":1,"message":"266","line":227,"column":21,"nodeType":"261","endLine":227,"endColumn":55},{"ruleId":"249","severity":1,"message":"269","line":1,"column":17,"nodeType":"251","messageId":"252","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"265","line":84,"column":10,"nodeType":"251","messageId":"252","endLine":84,"endColumn":21},{"ruleId":"259","severity":1,"message":"266","line":388,"column":19,"nodeType":"261","endLine":388,"endColumn":53},{"ruleId":"249","severity":1,"message":"264","line":2,"column":24,"nodeType":"251","messageId":"252","endLine":2,"endColumn":29},{"ruleId":"270","severity":1,"message":"271","line":109,"column":46,"nodeType":"272","messageId":"273","endLine":109,"endColumn":47,"suggestions":"274"},{"ruleId":"270","severity":1,"message":"271","line":109,"column":71,"nodeType":"272","messageId":"273","endLine":109,"endColumn":72,"suggestions":"275"},{"ruleId":"270","severity":1,"message":"271","line":109,"column":80,"nodeType":"272","messageId":"273","endLine":109,"endColumn":81,"suggestions":"276"},{"ruleId":"270","severity":1,"message":"271","line":109,"column":84,"nodeType":"272","messageId":"273","endLine":109,"endColumn":85,"suggestions":"277"},{"ruleId":"249","severity":1,"message":"265","line":114,"column":10,"nodeType":"251","messageId":"252","endLine":114,"endColumn":21},{"ruleId":"259","severity":1,"message":"266","line":477,"column":19,"nodeType":"261","endLine":477,"endColumn":53},{"ruleId":"249","severity":1,"message":"278","line":3,"column":10,"nodeType":"251","messageId":"252","endLine":3,"endColumn":14},{"ruleId":"249","severity":1,"message":"279","line":3,"column":16,"nodeType":"251","messageId":"252","endLine":3,"endColumn":26},{"ruleId":"249","severity":1,"message":"278","line":3,"column":10,"nodeType":"251","messageId":"252","endLine":3,"endColumn":14},{"ruleId":"249","severity":1,"message":"279","line":3,"column":16,"nodeType":"251","messageId":"252","endLine":3,"endColumn":26},{"ruleId":"249","severity":1,"message":"262","line":3,"column":11,"nodeType":"251","messageId":"252","endLine":3,"endColumn":19},{"ruleId":"249","severity":1,"message":"280","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"281","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":12},{"ruleId":"249","severity":1,"message":"282","line":6,"column":8,"nodeType":"251","messageId":"252","endLine":6,"endColumn":18},{"ruleId":"249","severity":1,"message":"283","line":7,"column":8,"nodeType":"251","messageId":"252","endLine":7,"endColumn":18},{"ruleId":"249","severity":1,"message":"284","line":8,"column":8,"nodeType":"251","messageId":"252","endLine":8,"endColumn":15},{"ruleId":"249","severity":1,"message":"285","line":9,"column":8,"nodeType":"251","messageId":"252","endLine":9,"endColumn":13},{"ruleId":"249","severity":1,"message":"286","line":11,"column":8,"nodeType":"251","messageId":"252","endLine":11,"endColumn":13},{"ruleId":"249","severity":1,"message":"280","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"281","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":12},{"ruleId":"249","severity":1,"message":"286","line":10,"column":8,"nodeType":"251","messageId":"252","endLine":10,"endColumn":13},{"ruleId":"249","severity":1,"message":"287","line":20,"column":13,"nodeType":"251","messageId":"252","endLine":20,"endColumn":25},{"ruleId":"249","severity":1,"message":"280","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"281","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":12},{"ruleId":"249","severity":1,"message":"286","line":10,"column":8,"nodeType":"251","messageId":"252","endLine":10,"endColumn":13},{"ruleId":"249","severity":1,"message":"287","line":20,"column":13,"nodeType":"251","messageId":"252","endLine":20,"endColumn":25},{"ruleId":"249","severity":1,"message":"280","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"281","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":12},{"ruleId":"249","severity":1,"message":"286","line":10,"column":8,"nodeType":"251","messageId":"252","endLine":10,"endColumn":13},{"ruleId":"249","severity":1,"message":"287","line":20,"column":13,"nodeType":"251","messageId":"252","endLine":20,"endColumn":25},{"ruleId":"249","severity":1,"message":"288","line":3,"column":8,"nodeType":"251","messageId":"252","endLine":3,"endColumn":17},{"ruleId":"249","severity":1,"message":"280","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"281","line":8,"column":8,"nodeType":"251","messageId":"252","endLine":8,"endColumn":12},{"ruleId":"249","severity":1,"message":"288","line":3,"column":8,"nodeType":"251","messageId":"252","endLine":3,"endColumn":17},{"ruleId":"249","severity":1,"message":"280","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"281","line":8,"column":8,"nodeType":"251","messageId":"252","endLine":8,"endColumn":12},{"ruleId":"249","severity":1,"message":"280","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"281","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":12},{"ruleId":"249","severity":1,"message":"286","line":10,"column":8,"nodeType":"251","messageId":"252","endLine":10,"endColumn":13},{"ruleId":"249","severity":1,"message":"287","line":20,"column":13,"nodeType":"251","messageId":"252","endLine":20,"endColumn":25},{"ruleId":"249","severity":1,"message":"289","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":17},{"ruleId":"249","severity":1,"message":"288","line":3,"column":8,"nodeType":"251","messageId":"252","endLine":3,"endColumn":17},{"ruleId":"249","severity":1,"message":"280","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"281","line":8,"column":8,"nodeType":"251","messageId":"252","endLine":8,"endColumn":12},{"ruleId":"249","severity":1,"message":"280","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":14},{"ruleId":"249","severity":1,"message":"281","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":12},{"ruleId":"249","severity":1,"message":"285","line":9,"column":8,"nodeType":"251","messageId":"252","endLine":9,"endColumn":13},{"ruleId":"249","severity":1,"message":"290","line":10,"column":8,"nodeType":"251","messageId":"252","endLine":10,"endColumn":14},{"ruleId":"249","severity":1,"message":"286","line":11,"column":8,"nodeType":"251","messageId":"252","endLine":11,"endColumn":13},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["293"],"'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'Alert' is defined but never used.","'formIsValid' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Component' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["294","295"],["296","297"],["298","299"],["300","301"],"'Link' is defined but never used.","'useHistory' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'IconButton' is defined but never used.","'RemoveIcon' is defined but never used.","'AddIcon' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'handleSubmit' is assigned a value but never used.","'TextField' is defined but never used.","'Container' is defined but never used.","'Skills' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"messageId":"304","fix":"305","desc":"306"},{"messageId":"307","fix":"308","desc":"309"},{"messageId":"304","fix":"310","desc":"306"},{"messageId":"307","fix":"311","desc":"309"},{"messageId":"304","fix":"312","desc":"306"},{"messageId":"307","fix":"313","desc":"309"},{"messageId":"304","fix":"314","desc":"306"},{"messageId":"307","fix":"315","desc":"309"},"Update the dependencies array to be: [dispatch]",{"range":"316","text":"317"},"removeEscape",{"range":"318","text":"319"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"320","text":"321"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"322","text":"319"},{"range":"323","text":"321"},{"range":"324","text":"319"},{"range":"325","text":"321"},{"range":"326","text":"319"},{"range":"327","text":"321"},[1445,1447],"[dispatch]",[2877,2878],"",[2877,2877],"\\",[2902,2903],[2902,2902],[2911,2912],[2911,2911],[2915,2916],[2915,2915]]


[{"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\index.js":"1","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\reportWebVitals.js":"2","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\App.js":"3","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\home\\home.js":"4","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\reducers\\userReducer.js":"5","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\navbar\\navbar.js":"6","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\contact-us\\contact-us.js":"7","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\about-us\\about-us.js":"8","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\employer\\employerSignin.js":"9","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\CreateNew\\CreateInternship.js":"10","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\student\\register.js":"11","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\employer\\employerSignup.js":"12","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\CreateNew\\CreatFreshersJob.js":"13","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\footer\\footer.js":"14","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\Jobs\\AllJobs.js":"15","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\CreateNew\\CreateJob.js":"16","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\Error\\Error.js":"17","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\Internships\\AllInternships.js":"18","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\UpdateForm\\JobUpdate.js":"19","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\FreshersJob\\AllFresherJob.js":"20","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\terms-condition\\terms-condition.js":"21","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\student\\login.js":"22","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\UpdateForm\\InternshipUpdate.js":"23","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\privacy-policy\\privacy-policy.js":"24","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\UpdateForm\\FresherJobUpdate.js":"25","D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\utils\\checkValidation.js":"26"},{"size":517,"mtime":1615393714645,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1615393714647,"results":"29","hashOfConfig":"28"},{"size":5728,"mtime":1618333175350,"results":"30","hashOfConfig":"28"},{"size":10293,"mtime":1618207705529,"results":"31","hashOfConfig":"28"},{"size":212,"mtime":1618207705533,"results":"32","hashOfConfig":"28"},{"size":7097,"mtime":1618207705530,"results":"33","hashOfConfig":"28"},{"size":6937,"mtime":1618207705522,"results":"34","hashOfConfig":"28"},{"size":4007,"mtime":1618207705511,"results":"35","hashOfConfig":"28"},{"size":8508,"mtime":1618207705523,"results":"36","hashOfConfig":"28"},{"size":11633,"mtime":1618207705506,"results":"37","hashOfConfig":"28"},{"size":17613,"mtime":1618333175482,"results":"38","hashOfConfig":"28"},{"size":14263,"mtime":1618333160593,"results":"39","hashOfConfig":"28"},{"size":10555,"mtime":1618207705505,"results":"40","hashOfConfig":"28"},{"size":7074,"mtime":1618333175478,"results":"41","hashOfConfig":"28"},{"size":8095,"mtime":1618487943926,"results":"42","hashOfConfig":"28"},{"size":11479,"mtime":1618207705507,"results":"43","hashOfConfig":"28"},{"size":375,"mtime":1618333175352,"results":"44","hashOfConfig":"28"},{"size":7976,"mtime":1618487917225,"results":"45","hashOfConfig":"28"},{"size":10834,"mtime":1618333175475,"results":"46","hashOfConfig":"28"},{"size":7162,"mtime":1618487938183,"results":"47","hashOfConfig":"28"},{"size":2196,"mtime":1615393714644,"results":"48","hashOfConfig":"28"},{"size":8399,"mtime":1618333175480,"results":"49","hashOfConfig":"28"},{"size":14667,"mtime":1618333175465,"results":"50","hashOfConfig":"28"},{"size":1754,"mtime":1615655421866,"results":"51","hashOfConfig":"28"},{"size":9820,"mtime":1618333175371,"results":"52","hashOfConfig":"28"},{"size":1874,"mtime":1618476130692,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eg88cv",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\index.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\reportWebVitals.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\App.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\home\\home.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\reducers\\userReducer.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\navbar\\navbar.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\contact-us\\contact-us.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\about-us\\about-us.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\employer\\employerSignin.js",["106"],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\CreateNew\\CreateInternship.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\student\\register.js",["107"],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\employer\\employerSignup.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\CreateNew\\CreatFreshersJob.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\footer\\footer.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\Jobs\\AllJobs.js",["108","109","110"],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\CreateNew\\CreateJob.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\Error\\Error.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\Internships\\AllInternships.js",["111","112","113","114","115","116","117","118"],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\UpdateForm\\JobUpdate.js",["119"],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\FreshersJob\\AllFresherJob.js",["120","121"],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\terms-condition\\terms-condition.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\student\\login.js",["122"],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\UpdateForm\\InternshipUpdate.js",["123","124"],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\privacy-policy\\privacy-policy.js",[],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\components\\UpdateForm\\FresherJobUpdate.js",["125"],"D:\\Coding\\OPENSOURCE\\easy-job-intern-1\\src\\utils\\checkValidation.js",[],{"ruleId":"126","severity":1,"message":"127","line":48,"column":10,"nodeType":"128","messageId":"129","endLine":48,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":114,"column":10,"nodeType":"128","messageId":"129","endLine":114,"endColumn":21},{"ruleId":"126","severity":1,"message":"130","line":13,"column":10,"nodeType":"128","messageId":"129","endLine":13,"endColumn":14},{"ruleId":"126","severity":1,"message":"131","line":19,"column":18,"nodeType":"128","messageId":"129","endLine":19,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":177,"column":40,"nodeType":"134","messageId":"135","endLine":177,"endColumn":42},{"ruleId":"126","severity":1,"message":"130","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"136","line":3,"column":16,"nodeType":"128","messageId":"129","endLine":3,"endColumn":25},{"ruleId":"126","severity":1,"message":"137","line":5,"column":3,"nodeType":"128","messageId":"129","endLine":5,"endColumn":9},{"ruleId":"126","severity":1,"message":"138","line":9,"column":3,"nodeType":"128","messageId":"129","endLine":9,"endColumn":17},{"ruleId":"126","severity":1,"message":"139","line":12,"column":3,"nodeType":"128","messageId":"129","endLine":12,"endColumn":8},{"ruleId":"126","severity":1,"message":"140","line":21,"column":10,"nodeType":"128","messageId":"129","endLine":21,"endColumn":16},{"ruleId":"126","severity":1,"message":"131","line":24,"column":18,"nodeType":"128","messageId":"129","endLine":24,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":162,"column":40,"nodeType":"134","messageId":"135","endLine":162,"endColumn":42},{"ruleId":"126","severity":1,"message":"127","line":80,"column":10,"nodeType":"128","messageId":"129","endLine":80,"endColumn":21},{"ruleId":"126","severity":1,"message":"131","line":20,"column":18,"nodeType":"128","messageId":"129","endLine":20,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":147,"column":40,"nodeType":"134","messageId":"135","endLine":147,"endColumn":42},{"ruleId":"126","severity":1,"message":"127","line":49,"column":10,"nodeType":"128","messageId":"129","endLine":49,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":80,"column":10,"nodeType":"128","messageId":"129","endLine":80,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":164,"column":6,"nodeType":"143","endLine":164,"endColumn":8,"suggestions":"144"},{"ruleId":"126","severity":1,"message":"127","line":71,"column":10,"nodeType":"128","messageId":"129","endLine":71,"endColumn":21},"no-unused-vars","'formIsValid' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useParams' is defined but never used.","'Button' is defined but never used.","'DropdownButton' is defined but never used.","'Modal' is defined but never used.","'colors' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'internship' and 'postId'. Either include them or remove the dependency array.","ArrayExpression",["145"],{"desc":"146","fix":"147"},"Update the dependencies array to be: [internship, postId]",{"range":"148","text":"149"},[5176,5178],"[internship, postId]"]
master

>>>>>>> c15d7de6120046cddf07d2d67c8caaa72c238ccf
